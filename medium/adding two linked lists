/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* current;

        int sum = l1->val + l2->val;
        int s0 = sum%10;
        int c_temp = sum/10;

        ListNode* temp = new ListNode(s0);
        ListNode* head = temp;

        int s1 = 0;
        ListNode* n1;
        ListNode* curr1 = l1->next;
        ListNode* curr2 =l2->next;
        int v1,v2;
        while( curr1 != nullptr || curr2!= nullptr)
        {    v1=  curr1 == nullptr?0:curr1->val;

           v2=  curr2 == nullptr?0:curr2->val;
            sum = v1 +v2 + c_temp;
            
            
            n1 = new ListNode((sum)%10);
            temp -> next = n1;
            temp = n1;
            c_temp = sum/10;
            if(curr1!= nullptr)
            curr1 = curr1->next;
            if(curr2!= nullptr)
            curr2 = curr2->next;
        }
        if(c_temp)
        {
        n1 = new ListNode(c_temp);
        temp->next = n1;
        }
        return head;

        
    }
};
